definitions:
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    type: object
  models.CustomDates:
    properties:
      endDate:
        type: string
      startingDate:
        type: string
    type: object
  models.UpdateInventory:
    properties:
      category_id:
        type: integer
      description:
        type: string
      price:
        type: number
      productName:
        type: string
      stock:
        type: integer
    type: object
  models.UserDetails:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact: {}
paths:
  /admin/adminlogin:
    post:
      consumes:
      - application/json
      description: Login handler for admins
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin Login
      tags:
      - Admin
  /admin/inventories/add:
    post:
      consumes:
      - multipart/form-data
      description: Admin can add new  products
      parameters:
      - description: product_name
        in: formData
        name: product_name
        required: true
        type: string
      - description: description
        in: formData
        name: description
        required: true
        type: string
      - description: price
        in: formData
        name: price
        required: true
        type: string
      - description: stock
        in: formData
        name: stock
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Inventory
      tags:
      - Admin
  /admin/inventories/delete:
    delete:
      consumes:
      - application/json
      description: Admin can delete a product
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Inventory
      tags:
      - Admin
  /admin/inventories/update:
    patch:
      consumes:
      - application/json
      description: Admin can update stock of the inventories
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      - description: Update Inventory
        in: body
        name: updateinventory
        required: true
        schema:
          $ref: '#/definitions/models.UpdateInventory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update Stock
      tags:
      - Admin
  /admin/logout:
    post:
      consumes:
      - application/json
      description: admin can logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: admin Logout
      tags:
      - Admin
  /admin/orders:
    get:
      description: Admin can view the orders according to status
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: status
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Orders
      tags:
      - Admin
  /admin/sales/annual:
    get:
      description: Admin can view the weekly sales Report
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Sales Report
      tags:
      - Admin
  /admin/sales/custom:
    post:
      description: Admin can view the weekly sales Report
      parameters:
      - description: custom dates
        in: body
        name: customDates
        required: true
        schema:
          $ref: '#/definitions/models.CustomDates'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Sales Report
      tags:
      - Admin
  /admin/sales/daily:
    get:
      description: Admin can view the daily sales Report
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Sales Report
      tags:
      - Admin
  /admin/sales/monthly:
    get:
      description: Admin can view the weekly sales Report
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Sales Report
      tags:
      - Admin
  /admin/sales/weekly:
    get:
      description: Admin can view the weekly sales Report
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Sales Report
      tags:
      - Admin
  /products/search:
    get:
      consumes:
      - application/json
      description: client can search with a key and get the list of products similar
        to that key
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: searchkey
        in: query
        name: searchkey
        required: true
        type: string
      - description: sortBY (asc/desc) - Sort by price in ascending (asc) or descending
          (desc) order
        in: query
        name: sortBY
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search Products
      tags:
      - Products
  /users/check-out/order/download-invoice:
    get:
      description: Download the invoice PDF file
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
      security:
      - Bearer: []
      summary: Download Invoice PDF
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      description: user can log in by giving their details
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - User
  /users/logout:
    post:
      consumes:
      - application/json
      description: user can log in by giving their details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Logout
      tags:
      - User
  /users/profile/orders:
    get:
      consumes:
      - application/json
      description: user can view the details of the orders
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Orders
      tags:
      - User
  /users/profile/orders/cancel:
    post:
      consumes:
      - application/json
      description: user can cancel the orders
      parameters:
      - description: order id
        in: query
        name: orderid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Order Cancel
      tags:
      - User
  /users/signup:
    post:
      consumes:
      - application/json
      description: user can signup by giving their details
      parameters:
      - description: signup
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/models.UserDetails'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Signup
      tags:
      - User
swagger: "2.0"
